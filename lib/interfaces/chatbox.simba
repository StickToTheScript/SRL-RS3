(*
Chat Box
========

The chatbox file holds functions and procedures that are used in the runescape chat box.

The source for this file can be found `here <https://github.com/SRL/SRL-6/blob/master/lib/interfaces/chatbox.simba>`_.

*)

{$f-}

(*
Consts, Types, Vars
~~~~~~~~~~~~~~~~~~~

The following constants, types and variables are used throughout the chatBox methods.

**const Tesseract Fiter**

.. code-block:: pascal

    const
      TESS_FILTER_CHATBOX: TTesseractFilter = [3, 3, [False, 35, TM_Mean]];

The TTesseractFilter that is used by the chatBox text functions by default.
Scripters can create and use their own filters if they wish.

*)
const
  TESS_THRESHOLD_CHATBOX: Integer = 35;

  CHATBOX_TRADES = 0;
  CHATBOX_CHALLENGES = 1;
  CHATBOX_ERRORS = 3;

(*
**type TRSChatBox**

.. code-block:: pascal

    type
      TRSChatBox = type TRSInterface;

A type that stores the chatBox interface properties.

*)
type
  TRSChatBox = record(TRSInterface)
    lineBoxes: TBoxArray;
    wikiBitmap: Integer;
    isSetup: Boolean;
  end;

(*
**var chatBox**

.. code-block:: pascal

    var
      chatBox: TRSChatBox;

A variable through which scripters can access the TRSChatBox type methods.

*)
var
  chatBox: TRSChatBox;

(*
TRSChatBox methods
~~~~~~~~~~~~~~~~~~

The following methods should be called through the **chatBox** variable.

Example:

.. code-block:: pascal

    if chatBox.findText(['Hello']) then
      writeln('We found Hello in the chatBox');
*)

{*
__init
------

.. code-block:: pascal

    procedure TRSChatBox.__init();

Initializes the TRSChatBox.

.. note::

    - by Coh3n
    - Last Updated: 6 February 2022 by StickToTheScript

Example:

.. code-block:: pascal

    chatBox.__init();
*}
{$IFNDEF CODEINSIGHT}
procedure TRSChatBox.__init();
begin
  with self do
  begin
    name := 'RS Chat Box';
    ID := ID_INTERFACE_CHAT_BOX;
    parentID := -1;
    isStatic := false;
    isSetup := false;
    wikiBitmap := BitmapFromString(17, 9, 'meJw7e3D52YPLHQ0FXYyFgORZGNfZSKg41R3I3rNxhq+tHLLs0V0LgchMS8DOQAhIwrlBrlr7t845sHWuu62mhTaK7P7Ns4HIQJXXSkcASEK4plqiK+e37ds8K8jTQkeRx1yTH1l214YZQATXAuF2N6YDyewkPy15blMNkHpk2c2rJgIRXAuEu2nFhE0r+s10JY3V+Sy1BeBaILIblvduWNoL1wLiLu+NC3MDCk7tLrTUEYKoh8ouBcmuWtQJRHAtEK6cOEdrVSKQUZkXYYFkC0R2yZwmIIJrgXA15Lh1VYRnTSwHshNCrCBug8sumFE3b2oNMFhMNfiAJJANRFoK3NoK3NYmynOnVM+ZXOVhqwKXBaoHAO7XsRg=');

    addOnTerminate('__freeChatbox');
  end;
end;
{$ENDIF}

{*
__freeChatbox
-------------

.. code-block:: pascal

    procedure __freeChatbox();

Frees all the chatbox's bitmaps. Called on script termination.

.. note::

    - by StickToTheScript

Example:

.. code-block:: pascal

    addOnTerminate('__freeChatbox');
*}
{$IFNDEF CODEINSIGHT}
procedure __freeChatbox();
var
  i: integer;
begin
  print('Freeing chatbox bitmaps...');

  freeBitmap(Chatbox.wikiBitmap);
end;
{$ENDIF}
{$f+}

(*
GetTabSelectionArea
-------------------

.. code-block:: pascal

    function TRSGameTabs.GetTabSelectionArea(): TBox;

Returns the TBox of the tab selection area. It will return [-1, -1, -1, -1] if
one or no tabs are active.

.. note::

    - by StickToTheScript

Example:

.. code-block:: pascal

    var
      b: TBox;
    begin
      b := gameTabs.GetTabSelectionArea()

    end;
*)
function TRSChatBox.GetChatSelectionArea(): TBox;
var
  searchBounds: TBox;
  p1, p2: TPoint;
  msMiddleX, wid, hei: Integer;
begin
  result := [-1, -1, -1, -1];
                         
  getClientDimensions(wid, hei);
  searchBounds := [0, 0, wid - 1, hei - 1];
  msMiddleX := Round((searchBounds.X2 - searchBounds.X1) / 2);
  if findBitmapToleranceIn(GameTabs.tabSelectionBitmapStart, p1.x, p1.y, [searchBounds.X1, searchBounds.Y1, msMiddleX, searchBounds.Y2], 30) and findBitmapToleranceIn(GameTabs.tabSelectionBitmapEnd, p2.x, p2.y, [p1.x, p1.y - 17, msMiddleX, p1.y + 12], 30) then
    result := [p1.x, p1.y - 17, p2.x + 3, p2.y + 26];
end;

(*
getChatArea
-----------

.. code-block:: pascal

    function TRSChatBox.getChatArea(): TBox;

Returns a TBox of the area where the chat text is located.

.. note::

    - by Olly
    - Last Updated: 6 February 2022 by StickToTheScript

Example:

.. code-block:: pascal

    var
      area: TBox;
    begin
      area := chatBox.getChatArea();
    end;
*)
function TRSChatBox.getChatArea(): TBox;
var
  msBounds, tabSelectArea: TBox;
  p1, p2, msMiddle: TPoint;
  wid, hei: Integer;
begin
  result := [-1, -1, -1, -1];

  getClientDimensions(wid, hei);
  msBounds := [0, 0, wid - 1, hei - 1];
  msMiddle := [Round((msBounds.X2 - msBounds.X1) / 2), Round((msBounds.Y2 - msBounds.Y1) / 2)];
  tabSelectArea := GetChatSelectionArea();

  if (tabSelectArea <> [-1, -1, -1, -1]) then
  begin
    if findBitmapToleranceIn(self.wikiBitmap, p1.x, p1.y, [tabSelectArea.X1, tabSelectArea.Y2, tabSelectArea.X2 + 15, msBounds.Y2], 30) then
      result := [tabSelectArea.X1, tabSelectArea.Y2, p1.x + 25, p1.y + 18];
  end else
  begin
    if findBitmapToleranceIn(GameTabs.tabBitmapTopLeft, p1.x, p1.y, [msBounds.X1, msMiddle.Y, msMiddle.X, msBounds.Y2], 78) and findBitmapToleranceIn(self.wikiBitmap, p2.x, p2.y, [p1.X, p1.Y, msMiddle.X, msBounds.Y2], 30) then
      result := [p1.X + 2, p1.y + 12, p2.X + 24, p2.y + 17];
  end;
end;

{*
__setup
-------

.. code-block:: pascal

    procedure TRSChatBox.__setup();

Sets up the chatBox variables based on its size.

.. note::

    - by Olly
    - Last Updated: 6 February 2022 by StickToTheScript

Example:

.. code-block:: pascal

    chatBox.__setup();
*}            

{$IFNDEF CODEINSIGHT}
procedure TRSChatBox.__setup();
const
  NAME_LINE_SIZE = 25;
  SCROLL_BOX_LINE_SIZE = 18;
  NAME_LINE_OFFSET = 11;
var
  b, chatBounds: TBox;
  i: integer;
  p: TPoint;
begin
  setLength(self.lineBoxes, 0);

  self.setBounds(chatBox.getChatArea());


  b := [self.X1, self.Y2 - NAME_LINE_SIZE, self.X2, self.Y2];
  b := [self.X1, self.Y2 - NAME_LINE_SIZE, self.X2, self.Y2];

  for i:=0 to 10 do
  begin
    b := [self.X1, self.Y2 - NAME_LINE_SIZE - NAME_LINE_OFFSET - (SCROLL_BOX_LINE_SIZE * (i + 1)), self.X2, self.Y2 - NAME_LINE_OFFSET - NAME_LINE_SIZE - (SCROLL_BOX_LINE_SIZE * i)];
    if (b.X1 < self.X1) then
      break;

    insert(b, self.lineBoxes, high(self.lineBoxes)+1);
  end;
  self.isSetup := true;
end;
{$ENDIF}

(*
findText
--------

.. code-block:: pascal

    function TRSChatBox.findText(txt: TStringArray; const Filter: TTesseractFilter = TESS_FILTER_CHATBOX): boolean;

Returns true if any of the text in **txt** is found anywhere in the chat box.
The scripter has the option of using a custom TTesseractFilter **Filter** .

.. note::

    - by Olly
    - Last Updated: 6 February 2022 by StickToTheScript

Example:

.. code-block:: pascal

    if chatBox.findText(['Hello']) then
      writeLn('We found Hello in the chatBox');
*)
function TRSChatBox.findText(txt: TStringArray; const threshold : Integer = TESS_THRESHOLD_CHATBOX): boolean;
var
  s: string;
  i: Integer;
begin 
  if (not self.isSetup) then
    self.__setup();

  s := TesseractOCR.Recognize(Self.getChatArea(), threshold);
  if (length(s) > 1) then
  begin
    for i:=0 to High(txt) do
    begin
      if (pos(txt[i], s) > 0) then
        Exit(true);
    end;
  end;
end;

(*
getTextOnLine
-------------

.. code-block:: pascal

    function TRSChatBox.getTextOnLine(Line: Integer; Filter: TTesseractFilter = TESS_FILTER_CHATBOX): String;

Returns the string of text on chatBox line **Line** . The scripter has the
option of using a custom TTesseractFilter **Filter** . The bottom line in the
chatBox is line 0.

.. note::

    - by Olly
    - Last Updated: 6 February 2022 by StickToTheScript

Example:

.. code-block:: pascal

    writeLn(chatBox.getTextOnLine(0));
*)
function TRSChatBox.getTextOnLine(Line: Integer; const threshold : Integer = TESS_THRESHOLD_CHATBOX): String;
begin   
  if (not self.isSetup) then
    self.__setup();

  if (not inRange(Line, Low(Self.lineBoxes), High(Self.lineBoxes))) then
    Exit(Print('TRSChatBox.getTextOnLine(): Invaild line', False));

  with (Self.lineBoxes[Line]) do
    Result := TesseractOCR.Recognize(intToBox(x1, y1, x2, y2), threshold);
end;

(*
findTextOnLines
---------------

.. code-block:: pascal

    function TRSChatBox.findTextOnLines(txt: TStringArray; lines: TIntegerArray; Filter: TTesseractFilter = TESS_FILTER_CHATBOX): boolean;

Returns true if any of the text in **txt** is found on any of the chatBox
lines **lines** .The scripter has the option of using a custom TTesseractFilter
**Filter** . The bottom line in the chatBox is line 0.

.. note::

    - by Olly
    - Last Updated: 6 February 2022 by StickToTheScript

Example:

.. code-block:: pascal

    // returns true if "Hello" or "Hi" is found on the first 4 lines
    chatBox.findTextOnLines(['Hello', 'Hi'], [0..3]);
*)
function TRSChatBox.findTextOnLines(txt: TStringArray; lines: TIntegerArray; const threshold : Integer = TESS_THRESHOLD_CHATBOX): boolean;
var
  i: integer;
  s: string;
begin
  if (not self.isSetup) then
    self.__setup();

  result := false;

  for i := 0 to high(lines) do
  begin
    s := Self.getTextOnLine(Lines[i], threshold);
    if (IsArrInStr(txt, s)) then
    begin
      print('TRSChatBox.findTextOnLines(): Found text '+toStr(txt)+' on line '+intToStr(lines[i]));
      exit(true);
    end;
  end;
end;
//
//(*
//getXPBar
//--------
//
//.. code-block:: pascal
//
//    function TRSChatBox.getXPBar(): Integer;
//
//Returns the XP from the XP bar when it is placed in the top right corner of
//the chatBox.
//
//.. note::
//
//    - by Ashaman88
//    - Last Updated: Some time in 2014 by Olly
//
//Example:
//
//.. code-block:: pascal
//
//    var
//      xpGain: Integer;
//    begin
//      xpGain := chatBox.getXPBar() - StartXP;
//    end;
//*)
//function TRSChatBox.getXPBar(): Integer;
//const
//  threshold: Integer = 30;
//var
//  b: TBox;
//  i, p: Integer;
//  TPA, TextPoints: TPointArray;
//  ATPA: T2DPointArray;
//  s: String;
//begin
//  if (not self.isSetup) then
//    self.__setup();
//
//  Result := 0;
//
//  if (not FindColorsTolerance(TPA, 13158856, IntToBox(Self.X2 - 220, Self.Y1 + 16, Self.X2 - 5, Self.Y1 + 38), 30, ColorSetting(2, 4.17, 0.23))) then
//  begin
//    Print('TRSChatBox.getXP(): Failed to find text to read', TDebug.ERROR);
//    Exit();
//  end;
//
//  ATPA := ClusterTPAEx(TPA, 1, 1);
//  for i := 0 to High(ATPA) do
//  begin
//    b := GetTPABounds(ATPA[i]);
//    if (inRange(b.getWidth(), 2, 7)) and (inRange(b.getHeight(), 5, 9)) then
//      Insert(ATPA[i], TextPoints);
//  end;
//
//  b := GetTPABounds(TextPoints);
//  if (b.getWidth() < 3) or (b.getHeight() < 3) then
//    Exit();
//
//  s := TesseractOCR.Recognize(IntToBox(b.X1 - 2, b.Y1 - 5, b.X2 + 2, b.Y2 + 5), threshold);
//  p := Pos('xp', s);
//  if (p > 0) then
//    s := Copy(s, p + 2, Length(s) - (p + 1));
//
//  Result := StrToIntDef(ExtractFromStr(s, Numbers), 0);
//end;

(*
enterAmount
-----------

.. code-block:: pascal

    function TRSChatBox.enterAmount(amount, waitTime: integer): boolean;

Returns true if it enters the amount **amount** in the chatBox popup. It will
keep trying until successful of **waitTime** is reached.

.. note::

    - by Thomas
    - Last Updated: 6 February 2022 by StickToTheScript

Example:

.. code-block:: pascal

    chatBox.enterAmount(50, 5000);
*)
function TRSChatBox.enterAmount(amount, waitTime: integer): boolean;
var
  t: TCountDown;
  BACKGROUND_COLOR: TColorData := [9086905, 65];
begin
  if (not self.isSetup) then
    self.__setup();

  t.setTime(waitTime);

  result := BACKGROUND_COLOR.waitCount(self.getBounds(), waitTime, 10000);

  if result then
    typeSend(intToStr(amount), true);

  Print('TRSChatBox.enterAmount(): The enter amount popup never appeared', TDebug.ERROR);
end;

(*
findTextBoxes
-------------

.. code-block:: pascal

    function TRSChatBox.findTextBoxes(search: integer): TBoxArray;

Returns the TBoxArray of the type/color of text it **searches** for.
Usefull for accepting trades or adding certain players to ignore. They
are sorted from top to bottom (old to new). The possible types of text
to search for can be found at the top of the chatbox.simba file.

.. note::

    - by Thomas
    - Last Updated: 6 February 2022 by StickToTheScript

Example:

.. code-block:: pascal

    trades := chatBox.findTextBoxes(CHATBOX_TRADES);
    if length(trades) then
      mouseBox(trades[high(trades)], MOUSE_RIGHT);
*)
function TRSChatBox.findTextBoxes(search: integer): TBoxArray;
var
  TPA: TPointArray;
  ATPA: T2DPointArray;
begin   
  if (not self.isSetup) then
    self.__setup();

  case search of
    CHATBOX_CHALLENGES: FindColorsTolerance(TPA, 470116, chatBox.getChatArea(), 31);
    CHATBOX_TRADES: FindColorsTolerance(TPA, 11953617, chatBox.getChatArea(), 66);
    CHATBOX_ERRORS: FindColorsTolerance(TPA, 197608, chatBox.getChatArea(), 24);
  end;

  if length(TPA) then
  begin
    ATPA := TPA.cluster(11, 2);
    ATPA.filterBetween(0, 40);
    if length(ATPA) then
      result := ATPA.getEachBounds();
  end;
end;

begin
  chatBox.__init();
end;
